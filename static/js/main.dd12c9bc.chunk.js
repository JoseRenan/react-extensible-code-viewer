(this["webpackJsonpreact-extensible-code-viewer-example"]=this["webpackJsonpreact-extensible-code-viewer-example"]||[]).push([[0],{222:function(e,n,t){},223:function(e,n,t){"use strict";t.r(n);t(8);var a=t(0),l=t.n(a),r=t(5),c=t.n(r),o=t(1),i=t(6),m=t.n(i),s=(t(221),{container:"_1Lxpd",pre:"_28psz",line:"_1W5X1",lineContainer:"_2ItU9",lineNumber:"_16aXb"}),u=function(e){var n=e.language,t=e.children,r=Object(a.useRef)(null);return Object(a.useEffect)((function(){r&&r.current&&m.a.highlightBlock(r.current)}),[r]),l.a.createElement("pre",{ref:r,className:s.pre+" "+n},l.a.createElement("code",{className:s.code},t))},d=function(e){var n=e.lineNumber,t=e.children;return l.a.createElement("span",{className:""+s.line},l.a.createElement("span",{className:""+s.lineNumber},n,"."),t)},p=function(e){var n=e.code,t=e.endLineChar,a=void 0===t?"\n":t,r=e.language,c=e.line,o=void 0===c?function(e){return l.a.createElement(d,Object.assign({},e))}:c,i=n.split(a);return l.a.createElement("div",{className:s.container+" hljs"},i.map((function(e,n){return l.a.createElement("span",{key:n,className:s.lineContainer},o({lineNumber:n+1,code:e,children:l.a.createElement(u,{language:r},e)}))})))},E=(t(222),'public class Main {\n  private int c = 5;\n\n  public static void main(String args[]) {\n    int a = 1;\n    int b = 2;\n    System.out.println(a + b + c + 1);\n    Main.sayHello()\n  }\n\n  public static void sayHello() {\n    System.out.println("Hello \ud83e\udd7a")\n  }\n}'),C=function(e){var n=e.onClick;return l.a.createElement("div",{className:"add-comment",onClick:n},"+")},b=function(){return l.a.createElement("div",{className:"comment-input"},l.a.createElement("textarea",{style:{width:"100%"}}),l.a.createElement("div",null,l.a.createElement("button",null,"Cancel"),l.a.createElement("button",null,"Comment")))},h=function(e){var n=e.lineNumber,t=e.children,r=Object(a.useState)(!1),c=Object(o.a)(r,2),i=c[0],m=c[1],s=Object(a.useState)(!1),u=Object(o.a)(s,2),d=u[0],p=u[1];return l.a.createElement(l.a.Fragment,null,l.a.createElement("span",{style:{display:"flex"},onMouseEnter:function(){return m(!0)},onMouseLeave:function(){return m(!1)}},l.a.createElement("span",{className:"line-number"},n,"."),l.a.createElement("span",{style:{width:"1rem"}},i?l.a.createElement(C,{onClick:function(){return p(!d)}}):null),t),d?l.a.createElement(b,null):null)},v=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("h1",null,"React Extensible Code Viewer Example"),l.a.createElement("h3",null,"Result:"),l.a.createElement(p,{code:E,language:"java"}),l.a.createElement("h3",null,"Code:"),l.a.createElement(p,{code:"import React, { useState } from 'react'\nimport { CodeViewer } from 'react-extensible-code-viewer'\nimport 'react-extensible-code-viewer/dist/index.css'\n\nexport const App = () => <CodeViewer code={code} language='java' />",language:"javascript"}),l.a.createElement("h1",null,"Custom example with review comments (hover a code line and click on the +)"),l.a.createElement("h3",null,"Result:"),l.a.createElement(p,{code:E,language:"java",line:function(e){return l.a.createElement(h,e)}}),l.a.createElement("h3",null,"Code:"),l.a.createElement(p,{code:"import React, { useState } from 'react'\nimport { CodeViewer } from 'react-extensible-code-viewer'\nimport 'react-extensible-code-viewer/dist/index.css'\n\nconst AddCommentButton = ({ onClick }) => (\n  <div className='add-comment' onClick={onClick}>\n    +\n  </div>\n)\n\nconst CommentInput = () => (\n  <div className='comment-input'>\n    <textarea style={{ width: '100%' }} />\n    <div>\n      <button>Cancel</button>\n      <button>Comment</button>\n    </div>\n  </div>\n)\n\nconst CodeLine = ({ lineNumber, children }) => {\n  const [showAddComment, setShowAddComment] = useState(false)\n  const [showCommentInput, setShowCommentInput] = useState(false)\n  return (\n    <React.Fragment>\n      <span\n        style={{ display: 'flex' }}\n        onMouseEnter={() => setShowAddComment(true)}\n        onMouseLeave={() => setShowAddComment(false)}\n      >\n        <span className='line-number'>{lineNumber}.</span>\n        <span style={{ width: '1rem' }}>\n          {showAddComment ? (\n            <AddCommentButton\n              onClick={() => setShowCommentInput(!showCommentInput)}\n            />\n          ) : null}\n        </span>\n        {children}\n      </span>\n      {showCommentInput ? <CommentInput /> : null}\n    </React.Fragment>\n  )\n}\n\nexport const App = () => (\n  <CodeViewer\n    code={code}\n    language='java'\n    line={(props) => <CodeLine {...props}/>}\n  />\n)",language:"jsx"}))};c.a.render(l.a.createElement(v,null),document.getElementById("root"))},7:function(e,n,t){e.exports=t(223)},8:function(e,n,t){}},[[7,1,2]]]);
//# sourceMappingURL=main.dd12c9bc.chunk.js.map